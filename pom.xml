<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.dmarcous</groupId>
	<artifactId>mrdbscan_experimental_2.11</artifactId>
	<version>1.0.0</version>

	<name>Distributed DBSCAN on Apache Spark</name>
	<url>http://www.irvingc.com/dbscan-on-spark</url>
	<packaging>jar</packaging>

	<scm>
		<connection>scm:git:https://github.com/dmarcous/mrdbscan_experimental</connection>
		<developerConnection>scm:git:git@github.com:dmarcous/mrdbscan_experimental.git</developerConnection>
		<url>https://github.com/dmarcous/mrdbscan_experimental</url>
	</scm>

	<developers>
		<developer>
			<id>irvingc</id>
			<name>Irving Cordova</name>
			<email>irving@irvingc.com</email>
			<url>http://www.irvingc.com</url>
		</developer>
		<developer>
			<id>dmarcous</id>
			<name>Daniel Marcous</name>
			<email>dmarcous@gmail.com</email>
			<url>http://www.dmarcous.com</url>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<scala.version>2.11.8</scala.version>
		<scala.binary.version>2.11</scala.binary.version>
		<scalatest.version>3.0.5</scalatest.version>
		<spark.version>2.3.2</spark.version>
	</properties>

	<repositories>
		<repository>
			<id>central</id>
			<!-- This should be at top, it makes maven try the central repo first 
				and then others and hence faster dep resolution -->
			<name>Maven Repository</name>
			<url>https://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>archery-repo</id>
			<name>Repo for Archery R-Tree</name>
			<url>http://dl.bintray.com/meetup/maven</url>
		</repository>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_${scala.binary.version}</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>com.meetup</groupId>
			<artifactId>archery_${scala.binary.version}</artifactId>
			<version>0.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.github.dmarcous</groupId>
			<artifactId>s2utils_${scala.binary.version}</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.binary.version}</artifactId>
			<version>${scalatest.version}</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>com.github.dmarcous</groupId>
            <artifactId>dDBGSCAN</artifactId>
            <version>master-SNAPSHOT</version>
        </dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scalaVersion>${scala.binary.version}</scalaVersion>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>org.apache.spark.mllib.clustering.dbscan.CLIRunner</mainClass>
								</transformer>
							</transformers>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/maven/**</exclude>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<relocations>
							</relocations>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.scalastyle</groupId>
				<artifactId>scalastyle-maven-plugin</artifactId>
				<version>0.6.0</version>
				<configuration>
					<verbose>false</verbose>
					<failOnViolation>true</failOnViolation>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
					<failOnWarning>true</failOnWarning>
					<sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
					<testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
					<configLocation>${basedir}/scalastyle-config.xml</configLocation>
					<outputFile>${project.build.directory}/scalastyle-output.xml</outputFile>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/scalatest-reports</reportsDirectory>
					<junitxml>.</junitxml>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>
